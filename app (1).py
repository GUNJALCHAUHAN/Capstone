# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XkLV6T11b-IQF1UZM8Ignup7drE8Bf_Y
"""

import streamlit as st
import numpy as np
import tensorflow as tf
from PIL import Image

# Load model
@st.cache_resource
def load_model():
    model = tf.keras.models.load_model('crop_disease_model.h5')
    return model

model = load_model()

# Define class labels manually if you don't have access to train_generator.class_indices
class_labels = [
    "Apple___Apple_scab",
    "Apple___Black_rot",
    "Apple___Cedar_apple_rust",
    "Apple___healthy",
    "Blueberry___healthy",
    "Cherry_(including_sour)___Powdery_mildew",
    "Cherry_(including_sour)___healthy",
    "Corn_(maize)___Cercospora_leaf_spot Gray_leaf_spot",
    "Corn_(maize)___Common_rust_",
    "Corn_(maize)___Northern_Leaf_Blight",
    "Corn_(maize)___healthy",
    "Grape___Black_rot",
    "Grape___Esca_(Black_Measles)",
    "Grape___Leaf_blight_(Isariopsis_Leaf_Spot)",
    "Grape___healthy",
    "Orange___Haunglongbing_(Citrus_greening)",
    "Peach___Bacterial_spot"
]

# Page title
st.title("üåæ Crop Disease Detection")

# Upload image
uploaded_file = st.file_uploader("üì§ Upload a leaf image", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    image = Image.open(uploaded_file).convert('RGB')
    st.image(image, caption='üì∑ Uploaded Image', use_column_width=True)

    # Preprocess image
    img = image.resize((224, 224))
    img_array = np.expand_dims(np.array(img) / 255.0, axis=0)

    # Predict
    prediction = model.predict(img_array)
    predicted_class_id = np.argmax(prediction)
    confidence = np.max(prediction)

    # Decode class
    predicted_label = class_labels[predicted_class_id]

    # Show prediction
    st.success(f"‚úÖ **Predicted Class:** {predicted_label}")
    st.info(f"üîç **Confidence:** {confidence * 100:.2f}%")

